[{"D:\\internship\\React-Mini-blog\\dojo-blog\\src\\index.js":"1","D:\\internship\\React-Mini-blog\\dojo-blog\\src\\App.js":"2","D:\\internship\\React-Mini-blog\\dojo-blog\\src\\Navbar.js":"3","D:\\internship\\React-Mini-blog\\dojo-blog\\src\\NotFound.js":"4","D:\\internship\\React-Mini-blog\\dojo-blog\\src\\Home.js":"5","D:\\internship\\React-Mini-blog\\dojo-blog\\src\\BlogDetails.js":"6","D:\\internship\\React-Mini-blog\\dojo-blog\\src\\Create.js":"7","D:\\internship\\React-Mini-blog\\dojo-blog\\src\\BlogList.js":"8","D:\\internship\\React-Mini-blog\\dojo-blog\\src\\useFetch.js":"9","D:\\internship\\React-Mini-blog\\dojo-blog\\src\\Edit.js":"10"},{"size":447,"mtime":1670938615884,"results":"11","hashOfConfig":"12"},{"size":944,"mtime":1670941071997,"results":"13","hashOfConfig":"12"},{"size":430,"mtime":1670938615882,"results":"14","hashOfConfig":"12"},{"size":275,"mtime":1670938615883,"results":"15","hashOfConfig":"12"},{"size":430,"mtime":1670939764470,"results":"16","hashOfConfig":"12"},{"size":1358,"mtime":1670943754011,"results":"17","hashOfConfig":"12"},{"size":2107,"mtime":1670943572210,"results":"18","hashOfConfig":"12"},{"size":420,"mtime":1670939773363,"results":"19","hashOfConfig":"12"},{"size":1036,"mtime":1670943537959,"results":"20","hashOfConfig":"12"},{"size":2718,"mtime":1670958772246,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"k68dw0",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"D:\\internship\\React-Mini-blog\\dojo-blog\\src\\index.js",[],["46","47"],"D:\\internship\\React-Mini-blog\\dojo-blog\\src\\App.js",[],"D:\\internship\\React-Mini-blog\\dojo-blog\\src\\Navbar.js",[],"D:\\internship\\React-Mini-blog\\dojo-blog\\src\\NotFound.js",[],"D:\\internship\\React-Mini-blog\\dojo-blog\\src\\Home.js",[],"D:\\internship\\React-Mini-blog\\dojo-blog\\src\\BlogDetails.js",[],"D:\\internship\\React-Mini-blog\\dojo-blog\\src\\Create.js",[],"D:\\internship\\React-Mini-blog\\dojo-blog\\src\\BlogList.js",[],["48","49"],"D:\\internship\\React-Mini-blog\\dojo-blog\\src\\useFetch.js",["50"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        if (res.status != 200) {\r\n          // error coming back from server\r\n          throw Error(\"could not fetch the data for that resource\");\r\n        }\r\n        setIsPending(false);\r\n        setData(res.data);\r\n        setError(null);\r\n      })\r\n      .catch((err) => {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"fetch aborted\");\r\n        } else {\r\n          // auto catches network / connection error\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        }\r\n      });\r\n\r\n    // abort the fetch\r\n    return () => abortCont.abort();\r\n  }, [url]);\r\n\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;\r\n","D:\\internship\\React-Mini-blog\\dojo-blog\\src\\Edit.js",["51"],"import { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\nimport axios from \"axios\";\r\n\r\nconst Create = () => {\r\n  const { id } = useParams();\r\n  const [name, setName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const { data, error, isPending } = useFetch(\r\n    \"https://jsonplaceholder.typicode.com/users/\" + id\r\n  );\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const blog = { name, username, email, city, phone, company };\r\n    axios\r\n      .put(\"https://jsonplaceholder.typicode.com/users/\" + id, {\r\n        body: JSON.stringify(blog),\r\n      })\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      {isPending && <div>Loading...</div>}\r\n      {error && <div>{error}</div>}\r\n      {data && (\r\n        <form onSubmit={handleSubmit}>\r\n          <h2>Edit - {data.name}</h2>\r\n          <label>Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            value={name}\r\n            placeholder={data.name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <label>Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            value={username}\r\n            placeholder={data.username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            value={email}\r\n            placeholder={data.email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <label>City:</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            value={city}\r\n            placeholder={data.address.city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          />\r\n          <label>Phone:</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            value={phone}\r\n            placeholder={data.phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n          />\r\n          <label>Company Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            value={company}\r\n            placeholder={data.company.name}\r\n            onChange={(e) => setCompany(e.target.value)}\r\n          />\r\n          <button>Update Blog</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},{"ruleId":"54","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":14,"column":24,"nodeType":"60","messageId":"61","endLine":14,"endColumn":26},{"ruleId":"62","severity":1,"message":"63","line":1,"column":20,"nodeType":"64","messageId":"65","endLine":1,"endColumn":29},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],["66"],["67"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]